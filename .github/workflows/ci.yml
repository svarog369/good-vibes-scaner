name: 🚀 Good Vibes CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CABAL_VERSION: "3.10"

jobs:
  build-and-test:
    name: 🧪 Build & Test (GHC ${{ matrix.ghc }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ghc: ['9.2.8', '9.4.7', '9.6.3']
        
    steps:
    - name: 📥 Checkout code (spreading the good vibes)
      uses: actions/checkout@v5.0.0
      
    - name: 🏗️ Setup Haskell (getting those vibes ready)
      uses: haskell-actions/setup@v2.7.6
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ env.CABAL_VERSION }}
        
    - name: 📦 Cache dependencies (caching those good vibes)
      uses: actions/cache@v4.2.0
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-${{ env.CABAL_VERSION }}-${{ hashFiles('**/*.cabal', '**/cabal.project*') }}
        restore-keys: |
          ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-${{ env.CABAL_VERSION }}-
          ${{ runner.os }}-ghc-${{ matrix.ghc }}-
          
    - name: 🔄 Update package index (refreshing the vibes)
      run: cabal update
      
    - name: 🔧 Configure project (aligning those vibes)
      run: cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
      
    - name: 📋 Show build plan (planning good vibes)
      run: cabal build --dry-run all
      
    - name: 🏗️ Build dependencies (building up good vibes)
      run: cabal build --dependencies-only all
      
    - name: 🔨 Build project (manifesting good vibes)
      run: cabal build all
      
    - name: 🧪 Run tests (testing those vibes)
      run: cabal test all --test-show-details=direct
      
    - name: 🔍 Run the scanner on itself (dogfooding with good vibes)
      run: |
        cabal run good-vibes-scaner -- --current-only .
      continue-on-error: true
        
  lint-and-format:
    name: 🧹 Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5.0.0
      
    - name: 🏗️ Setup Haskell
      uses: haskell-actions/setup@v2.7.6
      with:
        ghc-version: '9.6.3'
        cabal-version: ${{ env.CABAL_VERSION }}
        
    - name: 🔍 Basic syntax check (keeping vibes clean)
      run: |
        cabal build --dry-run all
        echo "✅ Syntax check passed with good vibes!"
      
  security-check:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5.0.0
      
    - name: 🏗️ Setup Haskell
      uses: haskell-actions/setup@v2.7.6
      with:
        ghc-version: '9.6.3'
        cabal-version: ${{ env.CABAL_VERSION }}
      
    - name: 🛡️ Install modern cabal-audit (security vibes tool)
      run: |
        # Download the latest static executable
        curl -L -o cabal-audit https://github.com/MangoIV/cabal-audit/releases/download/nightly/cabal-audit
        chmod +x cabal-audit
        sudo mv cabal-audit /usr/local/bin/
      
    - name: 🔍 Run security audit (keeping vibes secure)
      run: |
        # Run cabal-audit and capture the result
        if cabal-audit --json > audit_results.json 2>&1; then
          echo "✅ Security audit passed with good vibes!"
        else
          echo "⚠️ Security advisories found, checking if they affect our code..."
          cat audit_results.json
          
          # Check for known false positives that don't affect our usage
          false_positives=0
          if grep -q "HSEC-2023-0007" audit_results.json; then
            echo "ℹ️ HSEC-2023-0007 (readFloat): False positive - we don't use Numeric.readFloat"
            false_positives=$((false_positives + 1))
          fi
          if grep -q "HSEC-2024-0003" audit_results.json; then
            echo "ℹ️ HSEC-2024-0003 (process): False positive - we only execute git, not .bat/.cmd files"
            false_positives=$((false_positives + 1))
          fi
          
          # Count total unique advisories in the output
          total_advisories=$(grep -o "HSEC-[0-9]\{4\}-[0-9]\{4\}" audit_results.json | sort -u | wc -l | tr -d ' ')
          
          if [ "$false_positives" -eq "$total_advisories" ] && [ "$total_advisories" -eq 2 ]; then
            echo "✅ Only known false positives found - security audit passed!"
            exit 0
          else
            echo "❌ Found $total_advisories advisories, but only $false_positives are known false positives"
            echo "❌ New security vulnerabilities detected!"
            exit 1
          fi
        fi

  documentation:
    name: 📚 Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5.0.0
      
    - name: 🏗️ Setup Haskell
      uses: haskell-actions/setup@v2.7.6
      with:
        ghc-version: '9.6.3'
        cabal-version: ${{ env.CABAL_VERSION }}
        
    - name: 📖 Build documentation (documenting good vibes)
      run: |
        cabal configure --enable-documentation
        cabal haddock all
        
    - name: 📋 Check README links (keeping links vibing)
      run: |
        # Basic check for broken markdown links
        grep -o '\[.*\]([^)]*)' README.md || echo "No markdown links found"

  release-check:
    name: 🚀 Release Readiness
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test, lint-and-format]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5.0.0
      
    - name: 🏗️ Setup Haskell
      uses: haskell-actions/setup@v2.7.6
      with:
        ghc-version: '9.6.3'
        cabal-version: ${{ env.CABAL_VERSION }}
        
    - name: 📦 Build release binary (preparing good vibes for release)
      run: |
        cabal configure --enable-optimization=2 --ghc-options="-O2"
        cabal build
        
    - name: 📋 Package check (verifying release vibes)
      run: |
        cabal check
        cabal sdist
        
    - name: ✨ Success message
      run: |
        echo "🎉 All checks passed! Ready to spread good vibes! ✨"
        echo "📦 Build artifacts are ready for release"